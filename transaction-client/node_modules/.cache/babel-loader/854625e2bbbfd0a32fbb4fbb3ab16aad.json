{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { message } from 'antd';\nimport { useEffect, useState } from 'react';\nimport transactionsApi from '../api/transactionsApi';\n\nfunction useGetHistoryTransaction(username, socket) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [transactionHistory, seTransactionHistory] = useState(null);\n  const [updateWallet, setUpdateWallet] = useState(null);\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.on('updateWallets', data => {\n      setUpdateWallet(data);\n    });\n  }, [socket]);\n  useEffect(() => {\n    {\n      username && (async () => {\n        setLoading(true);\n\n        try {\n          const result = await transactionsApi.get(username);\n          seTransactionHistory(result.data);\n        } catch (err) {\n          message.error(err.response.data);\n        }\n\n        setLoading(false);\n      })();\n    }\n  }, [username, updateWallet]);\n  return {\n    loading,\n    transactionHistory\n  };\n}\n\n_s(useGetHistoryTransaction, \"7CQ4YMYom0BJ52f+qYEYY8vk/es=\");\n\nexport default useGetHistoryTransaction;","map":{"version":3,"names":["message","useEffect","useState","transactionsApi","useGetHistoryTransaction","username","socket","loading","setLoading","transactionHistory","seTransactionHistory","updateWallet","setUpdateWallet","on","data","result","get","err","error","response"],"sources":["C:/Users/hoang/Desktop/transaction/transaction-client/src/hooks/useGetHistoryTransaction.jsx"],"sourcesContent":["import { message } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport transactionsApi from '../api/transactionsApi';\r\n\r\nfunction useGetHistoryTransaction(username, socket) {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [transactionHistory, seTransactionHistory] = useState(null);\r\n\r\n\tconst [updateWallet, setUpdateWallet] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket?.on('updateWallets', (data) => {\r\n\t\t\tsetUpdateWallet(data);\r\n\t\t});\r\n\t}, [socket]);\r\n\r\n\tuseEffect(() => {\r\n\t\t{\r\n\t\t\tusername &&\r\n\t\t\t\t(async () => {\r\n\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst result = await transactionsApi.get(username);\r\n\t\t\t\t\t\tseTransactionHistory(result.data);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tmessage.error(err.response.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t})();\r\n\t\t}\r\n\t}, [username, updateWallet]);\r\n\treturn {\r\n\t\tloading,\r\n\t\ttransactionHistory,\r\n\t};\r\n}\r\n\r\nexport default useGetHistoryTransaction;\r\n"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;AAEA,SAASC,wBAAT,CAAkCC,QAAlC,EAA4CC,MAA5C,EAAoD;EAAA;;EACnD,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACO,kBAAD,EAAqBC,oBAArB,IAA6CR,QAAQ,CAAC,IAAD,CAA3D;EAEA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;EAEAD,SAAS,CAAC,MAAM;IACfK,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEO,EAAR,CAAW,eAAX,EAA6BC,IAAD,IAAU;MACrCF,eAAe,CAACE,IAAD,CAAf;IACA,CAFD;EAGA,CAJQ,EAIN,CAACR,MAAD,CAJM,CAAT;EAMAL,SAAS,CAAC,MAAM;IACf;MACCI,QAAQ,IACP,CAAC,YAAY;QACZG,UAAU,CAAC,IAAD,CAAV;;QACA,IAAI;UACH,MAAMO,MAAM,GAAG,MAAMZ,eAAe,CAACa,GAAhB,CAAoBX,QAApB,CAArB;UACAK,oBAAoB,CAACK,MAAM,CAACD,IAAR,CAApB;QACA,CAHD,CAGE,OAAOG,GAAP,EAAY;UACbjB,OAAO,CAACkB,KAAR,CAAcD,GAAG,CAACE,QAAJ,CAAaL,IAA3B;QACA;;QACDN,UAAU,CAAC,KAAD,CAAV;MACA,CATD,GADD;IAWA;EACD,CAdQ,EAcN,CAACH,QAAD,EAAWM,YAAX,CAdM,CAAT;EAeA,OAAO;IACNJ,OADM;IAENE;EAFM,CAAP;AAIA;;GA/BQL,wB;;AAiCT,eAAeA,wBAAf"},"metadata":{},"sourceType":"module"}